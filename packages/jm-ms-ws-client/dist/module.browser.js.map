{"version":3,"file":"module.browser.js","sources":["../lib/mdl/fnclient.js","../lib/mdl/index.js"],"sourcesContent":["const event = require('jm-event')\nconst utils = require('jm-ms-core').utils\nconst error = require('jm-err')\n\nconst Err = error.Err\n\nconst MAXID = 999999\nlet errNetwork = error.err(Err.FA_NETWORK)\n\nlet fnclient = function (_Adapter) {\n  return async function (opts = {}) {\n    if (typeof opts === 'string') {\n      opts = {uri: opts}\n    }\n    if (!opts.uri) throw error.err(error.Err.FA_PARAMS)\n    let Adapter = opts.Adapter || _Adapter\n    let doc = null\n    let uri = opts.uri\n    let timeout = opts.timeout || 0\n    let id = 0\n    let cbs = {}\n    let path = utils.getUriPath(uri)\n    let prefix = opts.prefix || ''\n    prefix = path + prefix\n    let ws = null\n    let autoReconnect = true\n    if (opts.reconnect === false) autoReconnect = false\n    let reconnectTimer = null\n    let reconnectionDelay = opts.reconnectionDelay || 5000\n    let DEFAULT_MAX_RECONNECT_ATTEMPTS = 0 // 默认重试次数0 表示无限制\n    let maxReconnectAttempts = opts.reconnectAttempts || DEFAULT_MAX_RECONNECT_ATTEMPTS\n\n    doc = {\n      uri: uri,\n      prefix: prefix,\n      connected: false,\n      autoReconnect: autoReconnect,\n      reconnectAttempts: 0,\n      reconnectionDelay: reconnectionDelay,\n      maxReconnectAttempts: maxReconnectAttempts,\n\n      onReady: function () {\n        let self = this\n        return new Promise(function (resolve, reject) {\n          if (self.connected) return resolve(self.connected)\n          self.on('open', function () {\n            resolve(self.connected)\n          })\n        })\n      },\n\n      async request (opts) {\n        await this.onReady()\n        opts = utils.preRequest.apply(this, arguments)\n        if (!this.connected) throw errNetwork\n        opts.uri = this.prefix + (opts.uri || '')\n        if (id >= MAXID) id = 0\n        id++\n        opts.id = id\n        ws.send(JSON.stringify(opts))\n        return new Promise((resolve, reject) => {\n          cbs[id] = {\n            resolve,\n            reject\n          }\n        })\n      },\n\n      async notify (opts) {\n        await this.onReady()\n        opts = utils.preRequest.apply(this, arguments)\n        if (!this.connected) throw errNetwork\n        opts.uri = this.prefix + (opts.uri || '')\n        ws.send(JSON.stringify(opts))\n      },\n\n      send: function () {\n        if (!this.connected) throw errNetwork\n        ws.send.apply(ws, arguments)\n      },\n      close: function () {\n        if (reconnectTimer) {\n          clearTimeout(reconnectTimer)\n          reconnectTimer = null\n        }\n        this.autoReconnect = false\n        this.reconnectAttempts = 0\n        if (!this.connected) return\n        ws.close()\n        ws = null\n      }\n    }\n    event.enableEvent(doc)\n\n    let onmessage = function (message) {\n      doc.emit('message', message)\n      let json = null\n      try {\n        json = JSON.parse(message)\n      } catch (err) {\n        return\n      }\n      if (json.id) {\n        if (cbs[json.id]) {\n          let p = cbs[json.id]\n          let err = null\n          let doc = json.data\n          if (doc.err) {\n            err = error.err(doc)\n            p.reject(err)\n          } else {\n            p.resolve(doc)\n          }\n          delete cbs[json.id]\n        }\n      }\n    }\n\n    doc.connect = function () {\n      if (this.connected) return\n      if (ws) return\n      this.autoReconnect = autoReconnect\n      doc.emit('connect')\n      let self = doc\n      ws = new Adapter(this.uri)\n      ws.on('message', message => {\n        onmessage(message)\n      })\n      ws.on('open', () => {\n        id = 0\n        cbs = {}\n        self.connected = true\n        self.emit('open')\n      })\n      ws.on('error', event => {\n        doc.emit('error', event)\n      })\n      ws.on('close', event => {\n        self.connected = false\n        ws = null\n        self.emit('close', event)\n        if (self.autoReconnect) {\n          if (self.maxReconnectAttempts && self.reconnectAttempts >= self.maxReconnectAttempts) {\n            self.emit('connectFail')\n            return\n          }\n          self.reconnectAttempts++\n          self.emit('reconnect')\n          reconnectTimer = setTimeout(function () {\n            reconnectTimer = null\n            self.connect()\n          }, self.reconnectionDelay)\n        }\n      })\n    }\n    doc.connect()\n    return doc\n  }\n}\n\nmodule.exports = fnclient\n","const fnclient = require('./fnclient')\n\nmodule.exports = function (Adapter) {\n  let client = fnclient(Adapter)\n  let $ = function (name = 'ms-ws-client') {\n    let app = this\n    app.clientModules.ws = client\n    app.clientModules.wss = client\n\n    return {\n      name: name,\n      unuse: () => {\n        delete app.clientModules.ws\n        delete app.clientModules.wss\n      }\n    }\n  }\n\n  $.client = client\n  return $\n}\n"],"names":["value","f","Promise","e","reject","utils","require$$0","Err","error","MAXID","errNetwork","err","FA_NETWORK","fnclient","_Adapter","opts","uri","FA_PARAMS","Adapter","doc","timeout","id","cbs","path","getUriPath","prefix","ws","autoReconnect","reconnect","reconnectTimer","reconnectionDelay","DEFAULT_MAX_RECONNECT_ATTEMPTS","maxReconnectAttempts","reconnectAttempts","connected","onReady","self","resolve","on","request","preRequest","apply","send","JSON","stringify","notify","arguments","close","clearTimeout","event","enableEvent","onmessage","message","emit","json","parse","p","data","connect","setTimeout","client","$","name","app","clientModules","wss","unuse"],"mappings":"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"}