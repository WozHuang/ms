{"version":3,"file":"browser.esm.js","sources":["../lib/ws.js","../lib/mdl/fnclient.js","../lib/mdl/index.js","../lib/index.js"],"sourcesContent":["const event = require('jm-event')\nconst error = require('jm-err')\nconst WebSocket = require('ws')\n\nconst Err = error.Err\nlet errNetwork = error.err(Err.FA_NETWORK)\n\nmodule.exports = class Adapter {\n  constructor (uri) {\n    let self = this\n    event.enableEvent(this)\n    let ws = new WebSocket(uri)\n    this.ws = ws\n    ws.on('message', function (data, flags) {\n      self.emit('message', data)\n    })\n    ws.onopen = () => {\n      self.emit('open')\n    }\n    ws.onerror = event => {\n      self.emit('error', event)\n    }\n    ws.onclose = event => {\n      self.emit('close', event)\n    }\n  }\n\n  send () {\n    if (!this.ws) throw errNetwork\n    this.ws.send.apply(this.ws, arguments)\n  }\n\n  close () {\n    if (!this.ws) throw errNetwork\n    this.ws.close.apply(this.ws, arguments)\n  }\n}\n","const event = require('jm-event')\nconst utils = require('jm-ms-core/lib/utils')\nconst error = require('jm-err')\n\nconst Err = error.Err\n\nconst MAXID = 999999\nlet errNetwork = error.err(Err.FA_NETWORK)\n\nlet fnclient = function (_Adapter) {\n  return async function (opts = {}) {\n    if (typeof opts === 'string') {\n      opts = {uri: opts}\n    }\n    if (!opts.uri) throw error.err(error.Err.FA_PARAMS)\n    let Adapter = opts.Adapter || _Adapter\n    let doc = null\n    let uri = opts.uri\n    let timeout = opts.timeout || 0\n    let id = 0\n    let cbs = {}\n    let path = utils.getUriPath(uri)\n    let prefix = opts.prefix || ''\n    prefix = path + prefix\n    let ws = null\n    let autoReconnect = true\n    if (opts.reconnect === false) autoReconnect = false\n    let reconnectTimer = null\n    let reconnectionDelay = opts.reconnectionDelay || 5000\n    let DEFAULT_MAX_RECONNECT_ATTEMPTS = 0 // 默认重试次数0 表示无限制\n    let maxReconnectAttempts = opts.reconnectAttempts || DEFAULT_MAX_RECONNECT_ATTEMPTS\n\n    doc = {\n      uri: uri,\n      prefix: prefix,\n      connected: false,\n      autoReconnect: autoReconnect,\n      reconnectAttempts: 0,\n      reconnectionDelay: reconnectionDelay,\n      maxReconnectAttempts: maxReconnectAttempts,\n\n      onReady: function () {\n        let self = this\n        return new Promise(function (resolve, reject) {\n          if (self.connected) return resolve(self.connected)\n          self.on('open', function () {\n            resolve(self.connected)\n          })\n        })\n      },\n\n      async request (opts) {\n        await this.onReady()\n        opts = utils.preRequest.apply(this, arguments)\n        if (!this.connected) throw errNetwork\n        opts.uri = this.prefix + (opts.uri || '')\n        if (id >= MAXID) id = 0\n        id++\n        opts.id = id\n        ws.send(JSON.stringify(opts))\n        return new Promise((resolve, reject) => {\n          cbs[id] = {\n            resolve,\n            reject\n          }\n        })\n      },\n\n      async notify (opts) {\n        await this.onReady()\n        opts = utils.preRequest.apply(this, arguments)\n        if (!this.connected) throw errNetwork\n        opts.uri = this.prefix + (opts.uri || '')\n        ws.send(JSON.stringify(opts))\n      },\n\n      send: function () {\n        if (!this.connected) throw errNetwork\n        ws.send.apply(ws, arguments)\n      },\n      close: function () {\n        if (reconnectTimer) {\n          clearTimeout(reconnectTimer)\n          reconnectTimer = null\n        }\n        this.autoReconnect = false\n        this.reconnectAttempts = 0\n        if (!this.connected) return\n        ws.close()\n        ws = null\n      }\n    }\n    event.enableEvent(doc)\n\n    let onmessage = function (message) {\n      doc.emit('message', message)\n      let json = null\n      try {\n        json = JSON.parse(message)\n      } catch (err) {\n        return\n      }\n      if (json.id) {\n        if (cbs[json.id]) {\n          let p = cbs[json.id]\n          let err = null\n          let doc = json.data\n          if (doc.err) {\n            err = error.err(doc)\n            p.reject(err)\n          } else {\n            p.resolve(doc)\n          }\n          delete cbs[json.id]\n        }\n      }\n    }\n\n    doc.connect = function () {\n      if (this.connected) return\n      if (ws) return\n      this.autoReconnect = autoReconnect\n      doc.emit('connect')\n      let self = doc\n      ws = new Adapter(this.uri)\n      ws.on('message', message => {\n        onmessage(message)\n      })\n      ws.on('open', () => {\n        id = 0\n        cbs = {}\n        self.connected = true\n        self.emit('open')\n      })\n      ws.on('error', event => {\n        doc.emit('error', event)\n      })\n      ws.on('close', event => {\n        self.connected = false\n        ws = null\n        self.emit('close', event)\n        if (self.autoReconnect) {\n          if (self.maxReconnectAttempts && self.reconnectAttempts >= self.maxReconnectAttempts) {\n            self.emit('connectFail')\n            return\n          }\n          self.reconnectAttempts++\n          self.emit('reconnect')\n          reconnectTimer = setTimeout(function () {\n            reconnectTimer = null\n            self.connect()\n          }, self.reconnectionDelay)\n        }\n      })\n    }\n    doc.connect()\n    return doc\n  }\n}\n\nmodule.exports = fnclient\n","const fnclient = require('./fnclient')\n\nmodule.exports = function (Adapter) {\n  let client = fnclient(Adapter)\n  let $ = function (name = 'ms-ws-client') {\n    let app = this\n    app.clientModules.ws = client\n    app.clientModules.wss = client\n\n    return {\n      name: name,\n      unuse: () => {\n        delete app.clientModules.ws\n        delete app.clientModules.wss\n      }\n    }\n  }\n\n  $.client = client\n  return $\n}\n","const Adapter = require('./ws')\nconst mdl = require('./mdl')\n\nlet $ = mdl(Adapter)\nmodule.exports = $\n"],"names":["Err","error","errNetwork","err","FA_NETWORK","uri","self","event","enableEvent","ws","WebSocket","on","data","flags","emit","onopen","onerror","onclose","send","apply","arguments","close","i","MAXID","fnclient","_Adapter","opts","FA_PARAMS","Adapter","doc","timeout","id","cbs","path","utils","getUriPath","prefix","autoReconnect","reconnect","reconnectTimer","reconnectionDelay","DEFAULT_MAX_RECONNECT_ATTEMPTS","maxReconnectAttempts","reconnectAttempts","connected","onReady","Promise","resolve","reject","request","preRequest","JSON","stringify","notify","clearTimeout","onmessage","message","json","parse","p","connect","setTimeout","client","$","name","app","clientModules","wss","unuse","mdl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,GAAG,GAAGC,KAAK,CAACD,GAAlB;AACA,IAAIE,UAAU,GAAGD,KAAK,CAACE,GAAN,CAAUH,GAAG,CAACI,UAAd,CAAjB;;AAEA,QAAc;;AAAA;mBACCC,GAAb,EAAkB;;;QACZC,IAAI,GAAG,IAAX;IACAC,OAAK,CAACC,WAAN,CAAkB,IAAlB;QACIC,KAAE,GAAG,IAAIC,EAAJ,CAAcL,GAAd,CAAT;SACKI,EAAL,GAAUA,KAAV;IACAA,KAAE,CAACE,EAAH,CAAM,SAAN,EAAiB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;MACtCP,IAAI,CAACQ,IAAL,CAAU,SAAV,EAAqBF,IAArB;KADF;;IAGAH,KAAE,CAACM,MAAH,GAAY,YAAM;MAChBT,IAAI,CAACQ,IAAL,CAAU,MAAV;KADF;;IAGAL,KAAE,CAACO,OAAH,GAAa,UAAAT,KAAK,EAAI;MACpBD,IAAI,CAACQ,IAAL,CAAU,OAAV,EAAmBP,KAAnB;KADF;;IAGAE,KAAE,CAACQ,OAAH,GAAa,UAAAV,KAAK,EAAI;MACpBD,IAAI,CAACQ,IAAL,CAAU,OAAV,EAAmBP,KAAnB;KADF;;;;;2BAKM;UACF,CAAC,KAAKE,EAAV,EAAc,MAAMP,UAAN;WACTO,EAAL,CAAQS,IAAR,CAAaC,KAAb,CAAmB,KAAKV,EAAxB,EAA4BW,SAA5B;;;;4BAGO;UACH,CAAC,KAAKX,EAAV,EAAc,MAAMP,UAAN;WACTO,EAAL,CAAQY,KAAR,CAAcF,KAAd,CAAoB,KAAKV,EAAzB,EAA6BW,SAA7B;;;;;GA3BJ;;;;;;;;qBCkGoB;;;;;cAnCRD;;;;;;oCAMN;;;;;;;;;;;;WAWE,IAAIG,CAAC;YACL,EAAA;;;UAED;;;;;;;;AAtFP,IAAMtB,KAAG,GAAGC,KAAK,CAACD,GAAlB;AAEA,IAAMuB,KAAK,GAAG,MAAd;AACA,IAAIrB,YAAU,GAAGD,KAAK,CAACE,GAAN,CAAUH,KAAG,CAACI,UAAd,CAAjB;;AAEA,IAAIoB,QAAQ,GAAG,SAAXA,QAAW,CAAUC,QAAV,EAAoB;4BACC;QAAXC,IAAW,uEAAJ,EAAI;;QAC5B,OAAOA,IAAP,KAAgB,QAApB,EAA8B;MAC5BA,IAAI,GAAG;QAACrB,GAAG,EAAEqB;OAAb;;;QAEE,CAACA,IAAI,CAACrB,GAAV,EAAe,MAAMJ,KAAK,CAACE,GAAN,CAAUF,KAAK,CAACD,GAAN,CAAU2B,SAApB,CAAN;QACXC,OAAO,GAAGF,IAAI,CAACE,OAAL,IAAgBH,QAA9B;QACII,GAAG,GAAG,IAAV;QACIxB,GAAG,GAAGqB,IAAI,CAACrB,GAAf;QACIyB,OAAO,GAAGJ,IAAI,CAACI,OAAL,IAAgB,CAA9B;QACIC,EAAE,GAAG,CAAT;QACIC,GAAG,GAAG,EAAV;QACIC,IAAI,GAAGC,KAAK,CAACC,UAAN,CAAiB9B,GAAjB,CAAX;QACI+B,MAAM,GAAGV,IAAI,CAACU,MAAL,IAAe,EAA5B;IACAA,MAAM,GAAGH,IAAI,GAAGG,MAAhB;QACI3B,KAAE,GAAG,IAAT;QACI4B,aAAa,GAAG,IAApB;QACIX,IAAI,CAACY,SAAL,KAAmB,KAAvB,EAA8BD,aAAa,GAAG,KAAhB;QAC1BE,cAAc,GAAG,IAArB;QACIC,iBAAiB,GAAGd,IAAI,CAACc,iBAAL,IAA0B,IAAlD;QACIC,8BAA8B,GAAG,CAArC,CAnBgC;;QAoB5BC,oBAAoB,GAAGhB,IAAI,CAACiB,iBAAL,IAA0BF,8BAArD;IAEAZ,GAAG,GAAG;MACJxB,GAAG,EAAEA,GADD;MAEJ+B,MAAM,EAAEA,MAFJ;MAGJQ,SAAS,EAAE,KAHP;MAIJP,aAAa,EAAEA,aAJX;MAKJM,iBAAiB,EAAE,CALf;MAMJH,iBAAiB,EAAEA,iBANf;MAOJE,oBAAoB,EAAEA,oBAPlB;MASJG,OAAO,EAAE,mBAAY;YACfvC,IAAI,GAAG,IAAX;eACO,IAAIwC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;cACxC1C,IAAI,CAACsC,SAAT,EAAoB,OAAOG,OAAO,CAACzC,IAAI,CAACsC,SAAN,CAAd;UACpBtC,IAAI,CAACK,EAAL,CAAQ,MAAR,EAAgB,YAAY;YAC1BoC,OAAO,CAACzC,IAAI,CAACsC,SAAN,CAAP;WADF;SAFK,CAAP;OAXE;MAmBEK,OAnBF,mBAmBWvB,IAnBX,EAmBiB;;;;sBACb,MAAKmB,OAAL,EADa;UAEnBnB,IAAI,GAAGQ,KAAK,CAACgB,UAAN,CAAiB/B,KAAjB,mBAAP;cACI,CAAC,MAAKyB,SAAV,EAAqB,MAAM1C,YAAN;UACrBwB,IAAI,CAACrB,GAAL,GAAW,MAAK+B,MAAL,IAAeV,IAAI,CAACrB,GAAL,IAAY,EAA3B,CAAX;cACI0B,EAAE,IAAIR,KAAV,EAAiBQ,EAAE,GAAG,CAAL;UACjBA,EAAE;UACFL,IAAI,CAACK,EAAL,GAAUA,EAAV;UACAtB,KAAE,CAACS,IAAH,CAAQiC,IAAI,CAACC,SAAL,CAAe1B,IAAf,CAAR;iBACO,IAAIoB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;YACtChB,GAAG,CAACD,EAAD,CAAH,GAAU;cACRgB,OAAO,EAAPA,OADQ;cAERC,MAAM,EAANA;aAFF;WADK,CAAP;;OA5BE;MAoCEK,MApCF,mBAoCU3B,IApCV,EAoCgB;;;;sBACZ,OAAKmB,OAAL,EADY;UAElBnB,IAAI,GAAGQ,KAAK,CAACgB,UAAN,CAAiB/B,KAAjB,qBAAP;cACI,CAAC,OAAKyB,SAAV,EAAqB,MAAM1C,YAAN;UACrBwB,IAAI,CAACrB,GAAL,GAAW,OAAK+B,MAAL,IAAeV,IAAI,CAACrB,GAAL,IAAY,EAA3B,CAAX;UACAI,KAAE,CAACS,IAAH,CAAQiC,IAAI,CAACC,SAAL,CAAe1B,IAAf,CAAR;;OAzCE;MA4CJR,IAAI,EAAE,gBAAY;YACZ,CAAC,KAAK0B,SAAV,EAAqB,MAAM1C,YAAN;QACrBO,KAAE,CAACS,IAAH,CAAQC,KAAR,CAAcV,KAAd,EAAkBW,SAAlB;OA9CE;MAgDJC,KAAK,EAAE,iBAAY;YACbkB,cAAJ,EAAoB;UAClBe,YAAY,CAACf,cAAD,CAAZ;UACAA,cAAc,GAAG,IAAjB;;;aAEGF,aAAL,GAAqB,KAArB;aACKM,iBAAL,GAAyB,CAAzB;YACI,CAAC,KAAKC,SAAV,EAAqB;QACrBnC,KAAE,CAACY,KAAH;QACAZ,KAAE,GAAG,IAAL;;KAzDJ;IA4DAF,OAAK,CAACC,WAAN,CAAkBqB,GAAlB;;QAEI0B,SAAS,GAAG,SAAZA,SAAY,CAAUC,OAAV,EAAmB;MACjC3B,GAAG,CAACf,IAAJ,CAAS,SAAT,EAAoB0C,OAApB;UACIC,IAAI,GAAG,IAAX;;UACI;QACFA,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWF,OAAX,CAAP;OADF,CAEE,OAAOrD,GAAP,EAAY;;;;UAGVsD,IAAI,CAAC1B,EAAT,EAAa;YACPC,GAAG,CAACyB,IAAI,CAAC1B,EAAN,CAAP,EAAkB;cACZ4B,CAAC,GAAG3B,GAAG,CAACyB,IAAI,CAAC1B,EAAN,CAAX;cACI5B,GAAG,GAAG,IAAV;cACI0B,IAAG,GAAG4B,IAAI,CAAC7C,IAAf;;cACIiB,IAAG,CAAC1B,GAAR,EAAa;YACXA,GAAG,GAAGF,KAAK,CAACE,GAAN,CAAU0B,IAAV,CAAN;YACA8B,CAAC,CAACX,MAAF,CAAS7C,GAAT;WAFF,MAGO;YACLwD,CAAC,CAACZ,OAAF,CAAUlB,IAAV;;;iBAEKG,GAAG,CAACyB,IAAI,CAAC1B,EAAN,CAAV;;;KAnBN;;IAwBAF,GAAG,CAAC+B,OAAJ,GAAc,YAAY;UACpB,KAAKhB,SAAT,EAAoB;UAChBnC,KAAJ,EAAQ;WACH4B,aAAL,GAAqBA,aAArB;MACAR,GAAG,CAACf,IAAJ,CAAS,SAAT;UACIR,IAAI,GAAGuB,GAAX;MACApB,KAAE,GAAG,IAAImB,OAAJ,CAAY,KAAKvB,GAAjB,CAAL;MACAI,KAAE,CAACE,EAAH,CAAM,SAAN,EAAiB,UAAA6C,OAAO,EAAI;QAC1BD,SAAS,CAACC,OAAD,CAAT;OADF;MAGA/C,KAAE,CAACE,EAAH,CAAM,MAAN,EAAc,YAAM;QAClBoB,EAAE,GAAG,CAAL;QACAC,GAAG,GAAG,EAAN;QACA1B,IAAI,CAACsC,SAAL,GAAiB,IAAjB;QACAtC,IAAI,CAACQ,IAAL,CAAU,MAAV;OAJF;MAMAL,KAAE,CAACE,EAAH,CAAM,OAAN,EAAe,UAAAJ,KAAK,EAAI;QACtBsB,GAAG,CAACf,IAAJ,CAAS,OAAT,EAAkBP,KAAlB;OADF;MAGAE,KAAE,CAACE,EAAH,CAAM,OAAN,EAAe,UAAAJ,KAAK,EAAI;QACtBD,IAAI,CAACsC,SAAL,GAAiB,KAAjB;QACAnC,KAAE,GAAG,IAAL;QACAH,IAAI,CAACQ,IAAL,CAAU,OAAV,EAAmBP,KAAnB;;YACID,IAAI,CAAC+B,aAAT,EAAwB;cAClB/B,IAAI,CAACoC,oBAAL,IAA6BpC,IAAI,CAACqC,iBAAL,IAA0BrC,IAAI,CAACoC,oBAAhE,EAAsF;YACpFpC,IAAI,CAACQ,IAAL,CAAU,aAAV;;;;UAGFR,IAAI,CAACqC,iBAAL;UACArC,IAAI,CAACQ,IAAL,CAAU,WAAV;UACAyB,cAAc,GAAGsB,UAAU,CAAC,YAAY;YACtCtB,cAAc,GAAG,IAAjB;YACAjC,IAAI,CAACsD,OAAL;WAFyB,EAGxBtD,IAAI,CAACkC,iBAHmB,CAA3B;;OAXJ;KAnBF;;IAqCAX,GAAG,CAAC+B,OAAJ;WACO/B,GAAP;GAlJF;CADF;;AAuJA,cAAc,GAAGL,QAAjB;;AC9JA,OAAc,GAAG,YAAA,CAAUI,OAAV,EAAmB;MAC9BkC,MAAM,GAAGtC,UAAQ,CAACI,OAAD,CAArB;;MACImC,CAAC,GAAG,SAAJA,CAAI,GAAiC;QAAvBC,IAAuB,uEAAhB,cAAgB;QACnCC,GAAG,GAAG,IAAV;IACAA,GAAG,CAACC,aAAJ,CAAkBzD,EAAlB,GAAuBqD,MAAvB;IACAG,GAAG,CAACC,aAAJ,CAAkBC,GAAlB,GAAwBL,MAAxB;WAEO;MACLE,IAAI,EAAEA,IADD;MAELI,KAAK,EAAE,iBAAM;eACJH,GAAG,CAACC,aAAJ,CAAkBzD,EAAzB;eACOwD,GAAG,CAACC,aAAJ,CAAkBC,GAAzB;;KAJJ;GALF;;EAcAJ,CAAC,CAACD,MAAF,GAAWA,MAAX;SACOC,CAAP;CAjBF;;ACCA,IAAIA,CAAC,GAAGM,GAAG,CAACzC,IAAD,CAAX;AACA,OAAc,GAAGmC,CAAjB;;;;"}