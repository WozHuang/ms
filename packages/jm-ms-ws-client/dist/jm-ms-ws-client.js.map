{"version":3,"file":"jm-ms-ws-client.js","sources":["../lib/ws.js","../lib/mdl/fnclient.js","../lib/mdl/index.js","../lib/index.js"],"sourcesContent":["const event = require('jm-event')\nconst error = require('jm-err')\nconst WebSocket = require('ws')\n\nconst Err = error.Err\nlet errNetwork = error.err(Err.FA_NETWORK)\n\nmodule.exports = class Adapter {\n  constructor (uri) {\n    let self = this\n    event.enableEvent(this)\n    let ws = new WebSocket(uri)\n    this.ws = ws\n    ws.on('message', function (data, flags) {\n      self.emit('message', data)\n    })\n    ws.onopen = () => {\n      self.emit('open')\n    }\n    ws.onerror = event => {\n      self.emit('error', event)\n    }\n    ws.onclose = event => {\n      self.emit('close', event)\n    }\n  }\n\n  send () {\n    if (!this.ws) throw errNetwork\n    this.ws.send.apply(this.ws, arguments)\n  }\n\n  close () {\n    if (!this.ws) throw errNetwork\n    this.ws.close.apply(this.ws, arguments)\n  }\n}\n","const event = require('jm-event')\nconst utils = require('jm-ms-core/lib/utils')\nconst error = require('jm-err')\n\nconst Err = error.Err\n\nconst MAXID = 999999\nlet errNetwork = error.err(Err.FA_NETWORK)\n\nlet fnclient = function (_Adapter) {\n  return async function (opts = {}) {\n    if (typeof opts === 'string') {\n      opts = {uri: opts}\n    }\n    if (!opts.uri) throw error.err(error.Err.FA_PARAMS)\n    let Adapter = opts.Adapter || _Adapter\n    let doc = null\n    let uri = opts.uri\n    let timeout = opts.timeout || 0\n    let id = 0\n    let cbs = {}\n    let path = utils.getUriPath(uri)\n    let prefix = opts.prefix || ''\n    prefix = path + prefix\n    let ws = null\n    let autoReconnect = true\n    if (opts.reconnect === false) autoReconnect = false\n    let reconnectTimer = null\n    let reconnectionDelay = opts.reconnectionDelay || 5000\n    let DEFAULT_MAX_RECONNECT_ATTEMPTS = 0 // 默认重试次数0 表示无限制\n    let maxReconnectAttempts = opts.reconnectAttempts || DEFAULT_MAX_RECONNECT_ATTEMPTS\n\n    doc = {\n      uri: uri,\n      prefix: prefix,\n      connected: false,\n      autoReconnect: autoReconnect,\n      reconnectAttempts: 0,\n      reconnectionDelay: reconnectionDelay,\n      maxReconnectAttempts: maxReconnectAttempts,\n\n      onReady: function () {\n        let self = this\n        return new Promise(function (resolve, reject) {\n          if (self.connected) return resolve(self.connected)\n          self.on('open', function () {\n            resolve(self.connected)\n          })\n        })\n      },\n\n      async request (opts) {\n        await this.onReady()\n        opts = utils.preRequest.apply(this, arguments)\n        if (!this.connected) throw errNetwork\n        opts.uri = this.prefix + (opts.uri || '')\n        if (id >= MAXID) id = 0\n        id++\n        opts.id = id\n        ws.send(JSON.stringify(opts))\n        return new Promise((resolve, reject) => {\n          cbs[id] = {\n            resolve,\n            reject\n          }\n        })\n      },\n\n      async notify (opts) {\n        await this.onReady()\n        opts = utils.preRequest.apply(this, arguments)\n        if (!this.connected) throw errNetwork\n        opts.uri = this.prefix + (opts.uri || '')\n        ws.send(JSON.stringify(opts))\n      },\n\n      send: function () {\n        if (!this.connected) throw errNetwork\n        ws.send.apply(ws, arguments)\n      },\n      close: function () {\n        if (reconnectTimer) {\n          clearTimeout(reconnectTimer)\n          reconnectTimer = null\n        }\n        this.autoReconnect = false\n        this.reconnectAttempts = 0\n        if (!this.connected) return\n        ws.close()\n        ws = null\n      }\n    }\n    event.enableEvent(doc)\n\n    let onmessage = function (message) {\n      doc.emit('message', message)\n      let json = null\n      try {\n        json = JSON.parse(message)\n      } catch (err) {\n        return\n      }\n      if (json.id) {\n        if (cbs[json.id]) {\n          let p = cbs[json.id]\n          let err = null\n          let doc = json.data\n          if (doc.err) {\n            err = error.err(doc)\n            p.reject(err)\n          } else {\n            p.resolve(doc)\n          }\n          delete cbs[json.id]\n        }\n      }\n    }\n\n    doc.connect = function () {\n      if (this.connected) return\n      if (ws) return\n      this.autoReconnect = autoReconnect\n      doc.emit('connect')\n      let self = doc\n      ws = new Adapter(this.uri)\n      ws.on('message', message => {\n        onmessage(message)\n      })\n      ws.on('open', () => {\n        id = 0\n        cbs = {}\n        self.connected = true\n        self.emit('open')\n      })\n      ws.on('error', event => {\n        doc.emit('error', event)\n      })\n      ws.on('close', event => {\n        self.connected = false\n        ws = null\n        self.emit('close', event)\n        if (self.autoReconnect) {\n          if (self.maxReconnectAttempts && self.reconnectAttempts >= self.maxReconnectAttempts) {\n            self.emit('connectFail')\n            return\n          }\n          self.reconnectAttempts++\n          self.emit('reconnect')\n          reconnectTimer = setTimeout(function () {\n            reconnectTimer = null\n            self.connect()\n          }, self.reconnectionDelay)\n        }\n      })\n    }\n    doc.connect()\n    return doc\n  }\n}\n\nmodule.exports = fnclient\n","const fnclient = require('./fnclient')\n\nmodule.exports = function (Adapter) {\n  let client = fnclient(Adapter)\n  let $ = function (name = 'ms-ws-client') {\n    let app = this\n    app.clientModules.ws = client\n    app.clientModules.wss = client\n\n    return {\n      name: name,\n      unuse: () => {\n        delete app.clientModules.ws\n        delete app.clientModules.wss\n      }\n    }\n  }\n\n  $.client = client\n  return $\n}\n","const Adapter = require('./ws')\nconst mdl = require('./mdl')\n\nlet $ = mdl(Adapter)\nmodule.exports = $\n"],"names":["Err","error","errNetwork","err","FA_NETWORK","uri","self","event","enableEvent","ws","WebSocket","on","data","flags","emit","onopen","onerror","onclose","send","apply","arguments","close","i","MAXID","fnclient","_Adapter","opts","FA_PARAMS","Adapter","doc","timeout","id","cbs","path","utils","getUriPath","prefix","autoReconnect","reconnect","reconnectTimer","reconnectionDelay","DEFAULT_MAX_RECONNECT_ATTEMPTS","maxReconnectAttempts","reconnectAttempts","connected","onReady","Promise","resolve","reject","request","preRequest","JSON","stringify","notify","clearTimeout","onmessage","message","json","parse","p","connect","setTimeout","client","$","name","app","clientModules","wss","unuse","mdl"],"mappings":"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"}