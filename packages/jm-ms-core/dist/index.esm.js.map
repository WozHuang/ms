{"version":3,"file":"index.esm.js","sources":["../lib/utils.js","../lib/matcher.js","../lib/route.js","../lib/router.js","../lib/err.js","../lib/index.js"],"sourcesContent":["let preRequest = function (uri, type, data, opts) {\n  // uri为对象时直接返回\n  if (typeof uri === 'object') {\n    return uri\n  }\n\n  let r = {\n    uri: uri\n  }\n\n  // 第2个参数可能为空，data\n  if (type === undefined) {\n    return r\n  } else if (type && typeof type === 'object') {\n    return preRequest(uri, null, type, data)\n  } else if (typeof type === 'string') {\n    r.type = type\n  }\n\n  // 第3个参数可能为空，data\n  if (data === undefined) {\n    return r\n  } else if (data && typeof data === 'object') {\n    r.data = data\n  }\n\n  // 第4个参数可能为空，附加参数对象\n  if (opts === undefined) {\n    return r\n  } else if (opts && typeof opts === 'object') {\n    r = Object.assign(r, opts)\n  }\n\n  return r\n}\n\nlet utils = {\n  getUriProtocol: function (uri) {\n    if (!uri) return null\n    return uri.substring(0, uri.indexOf(':'))\n  },\n\n  getUriPath: function (uri) {\n    let idx = uri.indexOf('//')\n    if (idx === -1) return ''\n    idx = uri.indexOf('/', idx + 2)\n    if (idx === -1) return ''\n    uri = uri.substr(idx)\n    idx = uri.indexOf('#')\n    if (idx === -1) idx = uri.indexOf('?')\n    if (idx !== -1) uri = uri.substr(0, idx)\n    return uri\n  },\n\n  enableType: function (obj, types) {\n    let self = this\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n    types.forEach(function (type) {\n      obj[type] = async function () {\n        let opts = self.preRequest.apply(this, arguments)\n        opts.type = type\n        let doc = await obj.request(opts)\n        return doc\n      }\n    })\n  },\n\n  preRequest\n\n}\n\nmodule.exports =  utils\n","const pathtoRegexp = require('path-to-regexp')\n\n/**\n * Class representing a matcher.\n */\nclass Matcher {\n  /**\n   * create a matcher.\n   * @param {Object} opts\n   * @example\n   * opts:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  sensitive: 是否大小写敏感, 默认false(可选)\n   *  strict: 是否检查末尾的分隔符, 默认false(可选)\n   *  end: When false the path will match at the beginning. (default: true)\n   * }\n   */\n  constructor (opts = {}) {\n    let uri = opts.uri || '/'\n    let type = opts.type\n    type && (type = type.toLowerCase())\n    this.type = type\n    this.keys = []\n\n    this.regexp = pathtoRegexp(uri, this.keys, opts)\n\n    if (uri === '/' && opts.end === false) {\n      this.fast_slash = true\n    }\n\n    if (type === undefined) {\n      this.allType = true\n    }\n  }\n\n  /**\n   * Check if this matcher matches `uri`, if so\n   * populate `.params and .uri`.\n   *\n   * @param {String} uri\n   * @return {Object}\n   * @api private\n   */\n  match (opts = {}) {\n    let params\n    let uri = opts.uri\n\n    let type = opts.type\n    type && (type = type.toLowerCase())\n\n    if (type !== this.type && !this.allType) return false\n    if (uri === null || uri === undefined) return false\n\n    if (this.fast_slash) {\n      // fast uri non-ending match for / (everything matches)\n      params = {}\n      uri = ''\n      return {\n        params,\n        uri\n      }\n    }\n\n    let m = this.regexp.exec(uri)\n\n    if (!m) return false\n\n    // store values\n    params = {}\n    uri = m[0]\n    let keys = this.keys\n    for (let i = 1; i < m.length; i++) {\n      let key = keys[i - 1]\n      let prop = key.name\n      params[prop] = m[i]\n    }\n\n    return {\n      params,\n      uri\n    }\n  }\n}\n\nmodule.exports = Matcher\n","const Route = require('jm-route')\nconst Matcher = require('./matcher')\n\nclass DefaultRoute extends Route {\n  /**\n   * create a route.\n   * @param {Object} opts params\n   * @example\n   * opts:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数(必填)\n   *\n   * }\n   */\n  constructor (opts = {}) {\n    super(opts.fn)\n    this.name = `${opts.type || ''} ${opts.uri || ''}`\n    this.matcher = new Matcher(opts)\n    opts.router && (this.router = opts.router)\n  }\n\n  match (opts) {\n    return this.matcher.match(opts)\n  }\n}\n\nmodule.exports = DefaultRoute\n","const Route = require('./route')\nconst utils = require('./utils')\nconst error = require('jm-err')\nconst event = require('jm-event')\n\nlet Err = error.Err\nlet slice = Array.prototype.slice\n\n/**\n * Class representing a router.\n */\nclass Router {\n  /**\n   * create a router.\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  sensitive: 是否大小写敏感(可选)\n   *  strict: 是否检查末尾的分隔符(可选)\n   *  logging 是否打印日志，默认false\n   *  benchmark 是否计算耗时，默认false\n   * }\n   */\n  constructor (opts = {}) {\n    this._routes = []\n    this.sensitive = opts.sensitive\n    this.strict = opts.strict\n    this._logging = opts.logging || false\n    this._benchmark = opts.benchmark || false\n    // alias methods\n    utils.enableType(this, ['get', 'post', 'put', 'delete'])\n    event.enableEvent(this)\n  }\n\n  get logging () {\n    return this._logging\n  }\n\n  set logging (value) {\n    this._logging = value\n    this._routes.forEach(route => {\n      route.loggint = value\n    })\n  }\n\n  get benchmark () {\n    return this._benchmark\n  }\n\n  set benchmark (value) {\n    this._benchmark = value\n    this._routes.forEach(route => {\n      route.benchmark = value\n    })\n  }\n\n  get routes () {\n    return this._routes\n  }\n\n  /**\n   * clear all routes.\n   * @return {Router} for chaining\n   */\n  clear () {\n    this._routes = []\n    return this\n  }\n\n  /**\n   * 添加接口定义\n   * @function Router#_add\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数 function(opts, cb){}, 支持数组(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  _add (opts = {}) {\n    let err = null\n    let doc = null\n    if (!opts.uri || !opts.fn) {\n      doc = Err.FA_PARAMS\n      err = error.err(doc)\n      throw err\n    }\n\n    this.emit('add', opts)\n    let o = Object.assign({}, opts)\n    if (o.sensitive === undefined) o.sensitive = this.sensitive\n    if (o.strict === undefined) o.strict = this.strict\n    let route = new Route(o)\n    route.logging = this._logging\n    route.benchmark = this._benchmark\n    this._routes.push(route)\n    return this\n  }\n\n  /**\n   * 添加接口定义\n   * 支持多种参数格式, 例如\n   * add({uri:uri, type:type, fn:fn})\n   * add({uri:uri, type:type, fn:[fn1, fn2, ..., fnn]})\n   * add(uri, fn)\n   * add(uri, fn1, fn2, ..., fnn)\n   * add(uri, [fn1, fn2, ..,fnn])\n   * add(uri, type, fn)\n   * add(uri, type, fn1, fn2, ..., fnn)\n   * add(uri, type, [fn1, fn2, ..,fnn])\n   * @function Router#add\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数 function(opts, cb){}, 支持数组(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  add (opts) {\n    if (typeof opts === 'string') {\n      opts = {\n        uri: opts\n      }\n      if (typeof arguments[1] === 'string') {\n        opts.type = arguments[1]\n        if (Array.isArray(arguments[2])) {\n          opts.fn = arguments[2]\n        } else {\n          opts.fn = slice.call(arguments, 2)\n        }\n      } else if (Array.isArray(arguments[1])) {\n        opts.fn = arguments[1]\n      } else {\n        opts.fn = slice.call(arguments, 1)\n      }\n    }\n    return this._add(opts)\n  }\n\n  /**\n   * 引用路由定义\n   * @function Router#_use\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(可选)\n   *  fn: 接口处理函数 router实例 或者 function(opts){}(支持函数数组) 或者含有request或execute函数的对象(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  _use (opts = {}) {\n    let err = null\n    let doc = null\n    if (opts && typeof opts === 'object' && !opts.fn) {\n      opts = {\n        fn: opts\n      }\n    }\n    if (!opts.fn) {\n      doc = Err.FA_PARAMS\n      err = error.err(doc)\n      throw err\n    }\n\n    this.emit('use', opts)\n    opts.strict = false\n    opts.end = false\n    opts.uri || (opts.uri = '/')\n    if (typeof opts.fn === 'object') {\n      let router = opts.fn\n      if (router.request) {\n        opts.router = router\n        opts.fn = router.request.bind(router)\n      } else if (router.execute) {\n        opts.router = router\n        opts.fn = router.execute.bind(router)\n      }\n    }\n    return this._add(opts)\n  }\n\n  /**\n   * 引用路由定义\n   * use({uri:uri, fn:fn})\n   * use({uri:uri, fn:[fn1, fn2, ..., fnn]})\n   * use({uri:uri, fn:router})\n   * use({uri:uri, fn:obj}) obj必须实现了request或者execute函数之一，优先使用request\n   * use(uri, fn)\n   * use(uri, fn1, fn2, ..., fnn)\n   * use(uri, [fn1, fn2, ..,fnn])\n   * use(uri, router)\n   * use(uri, obj)\n   * use(fn)\n   * use(router)\n   * use(obj)\n   * use(fn1, fn2, ..., fnn)\n   * use([fn1, fn2, ..,fnn])\n   * @function Router#use\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(可选)\n   *  fn: 接口处理函数 router实例 或者 function(opts){}(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  use (opts) {\n    if (typeof opts === 'string') {\n      opts = {\n        uri: opts\n      }\n      if (typeof arguments[1] === 'object') { // object 或者 数组\n        opts.fn = arguments[1]\n      } else {\n        opts.fn = slice.call(arguments, 1)\n      }\n    } else if (typeof opts === 'function') {\n      opts = {\n        fn: slice.call(arguments, 0)\n      }\n    } else if (Array.isArray(opts)) {\n      opts = {\n        fn: opts\n      }\n    } else if (typeof opts === 'object') {\n      if (!opts.fn) {\n        opts = {\n          fn: opts\n        }\n      }\n    }\n\n    return this._use(opts)\n  }\n\n  /**\n   * 请求\n   * 支持多种参数格式, 例如\n   * request({uri:uri, type:type, data:data, params:params, timeout:timeout})\n   * request(uri, type, data, opts)\n   * request(uri, type, data)\n   * request(uri, type)\n   * request(uri)\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  data: 请求数据(可选)\n   *  params: 请求参数(可选)\n   *  timeout: 请求超时(可选, 单位毫秒, 默认0表示不检测超时)\n   * }\n   * @return {Object}\n   */\n  async request (opts) {\n    let t1 = 0\n    if (this.logging) {\n      if (this.benchmark) t1 = Date.now()\n      let msg = `Request`\n      this.name && (msg += ` ${this.name}`)\n      msg += ` args: ${JSON.stringify(opts)}`\n      console.info(msg)\n    }\n    if (typeof opts !== 'object') {\n      opts = utils.preRequest.apply(this, arguments)\n    }\n    let doc = null\n    try {\n      doc = await this.execute(opts)\n    } catch (e) {\n      const ret = await this.emit('error', e, opts)\n      if (ret === undefined) {\n        throw e\n      }\n      doc = ret\n      if (this.logging) {\n        console.info('error catched, return', doc)\n        console.error(e)\n      }\n    }\n    if (this.logging) {\n      let msg = `Request`\n      this.name && (msg += ` ${this.name}`)\n      if (doc !== undefined) msg += ` result: ${JSON.stringify(doc)}`\n      if (this.benchmark) msg += ` Elapsed time: ${Date.now() - t1}ms`\n      console.info(msg)\n    }\n    return doc\n  }\n\n  async execute (opts) {\n    let self = this\n    let routes = self.routes\n    let parentParams = opts.params\n    let parentUri = opts.baseUri || ''\n    let done = restore(opts, opts.baseUri, opts.params)\n    opts.originalUri || (opts.originalUri = opts.uri)\n    let uri = opts.uri\n\n    for (let i = 0, len = routes.length; i < len; i++) {\n      opts.baseUri = parentUri\n      opts.uri = uri\n      let route = routes[i]\n      if (!route) {\n        continue\n      }\n      let match = route.match(opts)\n      if (!match) continue\n\n      opts.params = Object.assign({}, parentParams, match.params)\n\n      if (route.router) {\n        opts.baseUri = parentUri + match.uri\n        opts.uri = opts.uri.replace(match.uri, '')\n      }\n      let doc = await route.execute(opts)\n      done()\n      if (doc !== undefined) {\n        return doc\n      }\n    }\n\n    // restore obj props after function\n    function restore (obj, baseUri, params) {\n      return function () {\n        obj.uri = obj.originalUri\n        obj.baseUri = baseUri\n        obj.params = params\n      }\n    }\n  }\n}\n\nmodule.exports = Router\n","let ERRCODE = 900\n\nmodule.exports = {\n  FA_INVALID_TYPE: {\n    err: ERRCODE++,\n    msg: 'invalid type'\n  }\n}\n","const error = require('jm-err')\nconst event = require('jm-event')\nconst mdl = require('jm-module')\nconst utils = require('./utils')\nconst Router = require('./router')\nconst Err = require('./err')\n\n/**\n * Class representing a root.\n */\nclass Root {\n  /**\n   * create a root.\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  logging 是否打印日志，默认false\n   *  benchmark 是否计算耗时，默认false\n   * }\n   */\n  constructor (opts = {}) {\n    mdl.enableModule(this)\n    event.enableEvent(this)\n    this.utils = utils\n    this.clientModules = {}\n    this.serverModules = {}\n    this.logging = opts.logging || false\n    this.benchmark = opts.benchmark || false\n  }\n\n  /**\n   * create a router\n   * @param {Object} opts\n   * @return {Router}\n   */\n  router (opts = {}) {\n    let self = this\n    let _opts = Object.assign({}, {logging: this.logging, benchmark: this.benchmark}, opts)\n    let app = new Router(_opts)\n\n    /**\n     * 添加代理\n     * proxy({uri:uri, target:target, changeOrigin:true})\n     * proxy(uri, target, changeOrigin)\n     * proxy(uri, target)\n     * @param {String} uri\n     * @param {String} target\n     * @param {boolean} changeOrigin 是否改变原始uri\n     */\n    app.proxy = async function (uri = {}, target, changeOrigin) {\n      let opts = uri\n      if (typeof uri === 'string') {\n        opts = {\n          uri,\n          target,\n          changeOrigin\n        }\n      }\n      if (!opts.target) {\n        let doc = error.Err.FA_PARAMS\n        let err = error.err(doc)\n        throw err\n      }\n      this.emit('proxy', opts)\n      if (typeof opts.target === 'string') {\n        opts.target = {uri: opts.target}\n      }\n      let client = await self.client(opts.target)\n\n      if (opts.changeOrigin) {\n        app.use(opts.uri, client.request.bind(client))\n      } else {\n        app.use(opts.uri, client)\n      }\n    }\n    return app\n  }\n\n  /**\n   * create a client\n   * @param {Object} opts\n   * @example\n   * opts参数:{\n   *  type: 类型(可选, 默认http)\n   *  uri: uri(可选, 默认http://127.0.0.1)\n   *  timeout: 请求超时(可选, 单位毫秒, 默认0表示不检测超时)\n   * }\n   * @return {Promise}\n   */\n  async client (opts = {}) {\n    if (typeof opts === 'string') {\n      opts = {uri: opts}\n    }\n    if (!opts.uri) throw error.err(error.Err.FA_PARAMS)\n    let err = null\n    let doc = null\n    let type = 'http'\n    opts.uri && (type = utils.getUriProtocol(opts.uri))\n    opts.type && (type = opts.type)\n    type = type.toLowerCase()\n    let fn = this.clientModules[type]\n    if (!fn) {\n      doc = Err.FA_INVALID_TYPE\n      err = error.err(doc)\n      throw err\n    }\n    doc = await fn(opts)\n    if (doc) utils.enableType(doc, ['get', 'post', 'put', 'delete'])\n    return doc\n  }\n\n  /**\n   * create a server\n   * @param {Object} app\n   * @param {Object} opts\n   * @example\n   * opts参数:{\n     *  uri: 网址(可选)\n     *  type: 类型(可选, 默认http)\n     *  host: 主机(可选, 默认127.0.0.1)\n     *  port: 端口(可选, 默认80, 根据type不同默认值也不同)\n     * }\n   * @return {Promise}\n   */\n  async server (app = null, opts = {}) {\n    let err = null\n    let doc = null\n    let type = 'http'\n    opts.uri && (type = utils.getUriProtocol(opts.uri))\n    opts.type && (type = opts.type)\n    type = type.toLowerCase()\n    let fn = this.serverModules[type]\n    if (!fn) {\n      doc = Err.FA_INVALID_TYPE\n      err = error.err(doc)\n      throw err\n    }\n    app.emit('server', opts)\n    doc = await fn(app, opts)\n    return doc\n  }\n\n  /**\n   * 创建一个代理路由\n   * 支持多种参数格式, 例如\n   * proxy({uri:uri})\n   * proxy(uri)\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n     *  uri: 目标uri(必填)\n     * }\n   * @return {Promise}\n   */\n  async proxy (opts = {}) {\n    let err = null\n    let doc = null\n    if (typeof opts === 'string') {\n      opts = {uri: opts}\n    }\n    if (!opts.uri) {\n      doc = error.Err.FA_PARAMS\n      err = error.err(doc)\n      throw err\n    }\n    let app = this.router()\n    let client = await this.client(opts)\n    app.use(client.request.bind(client))\n    app.client = client\n    return app\n  }\n}\n\nRoot.utils = utils\nmodule.exports = Root\n"],"names":["preRequest","uri","type","data","opts","r","undefined","Object","assign","utils","getUriProtocol","substring","indexOf","getUriPath","idx","substr","enableType","obj","types","self","Array","isArray","forEach","apply","request","Matcher","toLowerCase","keys","regexp","pathtoRegexp","end","fast_slash","allType","params","m","exec","i","length","key","prop","name","DefaultRoute","fn","matcher","router","match","Route","body","stage","shouldContinue","result","value","update","updateValue","test","state","__state","then","bind","observer","resolve","reject","Err","error","slice","prototype","Router","_routes","sensitive","strict","_logging","logging","_benchmark","benchmark","event","enableEvent","err","doc","FA_PARAMS","emit","o","route","push","arguments","call","_add","execute","_use","t1","Date","now","msg","JSON","stringify","console","info","e","ret","routes","parentParams","parentUri","baseUri","done","restore","originalUri","len","replace","loggint","ERRCODE","FA_INVALID_TYPE","_async","isNaN","Promise","Root","mdl","enableModule","clientModules","serverModules","_opts","app","proxy","target","changeOrigin","client","use"],"mappings":"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"}