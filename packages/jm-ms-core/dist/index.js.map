{"version":3,"file":"index.js","sources":["../lib/utils.js","../lib/matcher.js","../lib/route.js","../lib/router.js","../lib/err.js","../lib/index.js"],"sourcesContent":["let preRequest = function (uri, type, data, opts) {\n  // uri为对象时直接返回\n  if (typeof uri === 'object') {\n    return uri\n  }\n\n  let r = {\n    uri: uri\n  }\n\n  // 第2个参数可能为空，data\n  if (type === undefined) {\n    return r\n  } else if (type && typeof type === 'object') {\n    return preRequest(uri, null, type, data)\n  } else if (typeof type === 'string') {\n    r.type = type\n  }\n\n  // 第3个参数可能为空，data\n  if (data === undefined) {\n    return r\n  } else if (data && typeof data === 'object') {\n    r.data = data\n  }\n\n  // 第4个参数可能为空，附加参数对象\n  if (opts === undefined) {\n    return r\n  } else if (opts && typeof opts === 'object') {\n    r = Object.assign(r, opts)\n  }\n\n  return r\n}\n\nlet utils = {\n  getUriProtocol: function (uri) {\n    if (!uri) return null\n    return uri.substring(0, uri.indexOf(':'))\n  },\n\n  getUriPath: function (uri) {\n    let idx = uri.indexOf('//')\n    if (idx === -1) return ''\n    idx = uri.indexOf('/', idx + 2)\n    if (idx === -1) return ''\n    uri = uri.substr(idx)\n    idx = uri.indexOf('#')\n    if (idx === -1) idx = uri.indexOf('?')\n    if (idx !== -1) uri = uri.substr(0, idx)\n    return uri\n  },\n\n  enableType: function (obj, types) {\n    let self = this\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n    types.forEach(function (type) {\n      obj[type] = async function () {\n        let opts = self.preRequest.apply(this, arguments)\n        opts.type = type\n        let doc = await obj.request(opts)\n        return doc\n      }\n    })\n  },\n\n  preRequest\n\n}\n\nmodule.exports = utils\n","const pathtoRegexp = require('path-to-regexp')\n\n/**\n * Class representing a matcher.\n */\nclass Matcher {\n  /**\n   * create a matcher.\n   * @param {Object} opts\n   * @example\n   * opts:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  sensitive: 是否大小写敏感, 默认false(可选)\n   *  strict: 是否检查末尾的分隔符, 默认false(可选)\n   *  end: When false the path will match at the beginning. (default: true)\n   * }\n   */\n  constructor (opts = {}) {\n    let uri = opts.uri || '/'\n    let type = opts.type\n    type && (type = type.toLowerCase())\n    this.type = type\n    this.keys = []\n\n    this.regexp = pathtoRegexp(uri, this.keys, opts)\n\n    if (uri === '/' && opts.end === false) {\n      this.fast_slash = true\n    }\n\n    if (type === undefined) {\n      this.allType = true\n    }\n  }\n\n  /**\n   * Check if this matcher matches `uri`, if so\n   * populate `.params and .uri`.\n   *\n   * @param {String} uri\n   * @return {Object}\n   * @api private\n   */\n  match (opts = {}) {\n    let params\n    let uri = opts.uri\n\n    let type = opts.type\n    type && (type = type.toLowerCase())\n\n    if (type !== this.type && !this.allType) return false\n    if (uri === null || uri === undefined) return false\n\n    if (this.fast_slash) {\n      // fast uri non-ending match for / (everything matches)\n      params = {}\n      uri = ''\n      return {\n        params,\n        uri\n      }\n    }\n\n    let m = this.regexp.exec(uri)\n\n    if (!m) return false\n\n    // store values\n    params = {}\n    uri = m[0]\n    let keys = this.keys\n    for (let i = 1; i < m.length; i++) {\n      let key = keys[i - 1]\n      let prop = key.name\n      params[prop] = m[i]\n    }\n\n    return {\n      params,\n      uri\n    }\n  }\n}\n\nmodule.exports = Matcher\n","const Route = require('jm-route')\nconst Matcher = require('./matcher')\n\nclass DefaultRoute extends Route {\n  /**\n   * create a route.\n   * @param {Object} opts params\n   * @example\n   * opts:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数(必填)\n   *\n   * }\n   */\n  constructor (opts = {}) {\n    super(opts.fn)\n    this.name = `${opts.type || ''} ${opts.uri || ''}`\n    this.matcher = new Matcher(opts)\n    opts.router && (this.router = opts.router)\n  }\n\n  match (opts) {\n    return this.matcher.match(opts)\n  }\n}\n\nmodule.exports = DefaultRoute\n","const Route = require('./route')\nconst utils = require('./utils')\nconst error = require('jm-err')\nconst event = require('jm-event')\n\nlet Err = error.Err\nlet slice = Array.prototype.slice\n\n/**\n * Class representing a router.\n */\nclass Router {\n  /**\n   * create a router.\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  sensitive: 是否大小写敏感(可选)\n   *  strict: 是否检查末尾的分隔符(可选)\n   *  logging 是否打印日志，默认false\n   *  benchmark 是否计算耗时，默认false\n   * }\n   */\n  constructor (opts = {}) {\n    this._routes = []\n    this.sensitive = opts.sensitive\n    this.strict = opts.strict\n    this._logging = opts.logging || false\n    this._benchmark = opts.benchmark || false\n    // alias methods\n    utils.enableType(this, ['get', 'post', 'put', 'delete'])\n    event.enableEvent(this)\n  }\n\n  get logging () {\n    return this._logging\n  }\n\n  set logging (value) {\n    this._logging = value\n    this._routes.forEach(route => {\n      route.loggint = value\n    })\n  }\n\n  get benchmark () {\n    return this._benchmark\n  }\n\n  set benchmark (value) {\n    this._benchmark = value\n    this._routes.forEach(route => {\n      route.benchmark = value\n    })\n  }\n\n  get routes () {\n    return this._routes\n  }\n\n  /**\n   * clear all routes.\n   * @return {Router} for chaining\n   */\n  clear () {\n    this._routes = []\n    return this\n  }\n\n  /**\n   * 添加接口定义\n   * @function Router#_add\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数 function(opts, cb){}, 支持数组(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  _add (opts = {}) {\n    let err = null\n    let doc = null\n    if (!opts.uri || !opts.fn) {\n      doc = Err.FA_PARAMS\n      err = error.err(doc)\n      throw err\n    }\n\n    this.emit('add', opts)\n    let o = Object.assign({}, opts)\n    if (o.sensitive === undefined) o.sensitive = this.sensitive\n    if (o.strict === undefined) o.strict = this.strict\n    let route = new Route(o)\n    route.logging = this._logging\n    route.benchmark = this._benchmark\n    this._routes.push(route)\n    return this\n  }\n\n  /**\n   * 添加接口定义\n   * 支持多种参数格式, 例如\n   * add({uri:uri, type:type, fn:fn})\n   * add({uri:uri, type:type, fn:[fn1, fn2, ..., fnn]})\n   * add(uri, fn)\n   * add(uri, fn1, fn2, ..., fnn)\n   * add(uri, [fn1, fn2, ..,fnn])\n   * add(uri, type, fn)\n   * add(uri, type, fn1, fn2, ..., fnn)\n   * add(uri, type, [fn1, fn2, ..,fnn])\n   * @function Router#add\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数 function(opts, cb){}, 支持数组(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  add (opts) {\n    if (typeof opts === 'string') {\n      opts = {\n        uri: opts\n      }\n      if (typeof arguments[1] === 'string') {\n        opts.type = arguments[1]\n        if (Array.isArray(arguments[2])) {\n          opts.fn = arguments[2]\n        } else {\n          opts.fn = slice.call(arguments, 2)\n        }\n      } else if (Array.isArray(arguments[1])) {\n        opts.fn = arguments[1]\n      } else {\n        opts.fn = slice.call(arguments, 1)\n      }\n    }\n    return this._add(opts)\n  }\n\n  /**\n   * 引用路由定义\n   * @function Router#_use\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(可选)\n   *  fn: 接口处理函数 router实例 或者 function(opts){}(支持函数数组) 或者含有request或execute函数的对象(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  _use (opts = {}) {\n    let err = null\n    let doc = null\n    if (opts && typeof opts === 'object' && !opts.fn) {\n      opts = {\n        fn: opts\n      }\n    }\n    if (!opts.fn) {\n      doc = Err.FA_PARAMS\n      err = error.err(doc)\n      throw err\n    }\n\n    this.emit('use', opts)\n    opts.strict = false\n    opts.end = false\n    opts.uri || (opts.uri = '/')\n    if (typeof opts.fn === 'object') {\n      let router = opts.fn\n      if (router.request) {\n        opts.router = router\n        opts.fn = router.request.bind(router)\n      } else if (router.execute) {\n        opts.router = router\n        opts.fn = router.execute.bind(router)\n      }\n    }\n    return this._add(opts)\n  }\n\n  /**\n   * 引用路由定义\n   * use({uri:uri, fn:fn})\n   * use({uri:uri, fn:[fn1, fn2, ..., fnn]})\n   * use({uri:uri, fn:router})\n   * use({uri:uri, fn:obj}) obj必须实现了request或者execute函数之一，优先使用request\n   * use(uri, fn)\n   * use(uri, fn1, fn2, ..., fnn)\n   * use(uri, [fn1, fn2, ..,fnn])\n   * use(uri, router)\n   * use(uri, obj)\n   * use(fn)\n   * use(router)\n   * use(obj)\n   * use(fn1, fn2, ..., fnn)\n   * use([fn1, fn2, ..,fnn])\n   * @function Router#use\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(可选)\n   *  fn: 接口处理函数 router实例 或者 function(opts){}(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  use (opts) {\n    if (typeof opts === 'string') {\n      opts = {\n        uri: opts\n      }\n      if (typeof arguments[1] === 'object') { // object 或者 数组\n        opts.fn = arguments[1]\n      } else {\n        opts.fn = slice.call(arguments, 1)\n      }\n    } else if (typeof opts === 'function') {\n      opts = {\n        fn: slice.call(arguments, 0)\n      }\n    } else if (Array.isArray(opts)) {\n      opts = {\n        fn: opts\n      }\n    } else if (typeof opts === 'object') {\n      if (!opts.fn) {\n        opts = {\n          fn: opts\n        }\n      }\n    }\n\n    return this._use(opts)\n  }\n\n  /**\n   * 请求\n   * 支持多种参数格式, 例如\n   * request({uri:uri, type:type, data:data, params:params, timeout:timeout})\n   * request(uri, type, data, opts)\n   * request(uri, type, data)\n   * request(uri, type)\n   * request(uri)\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  data: 请求数据(可选)\n   *  params: 请求参数(可选)\n   *  timeout: 请求超时(可选, 单位毫秒, 默认0表示不检测超时)\n   * }\n   * @return {Object}\n   */\n  async request (opts) {\n    let t1 = 0\n    if (this.logging) {\n      if (this.benchmark) t1 = Date.now()\n      let msg = `Request`\n      this.name && (msg += ` ${this.name}`)\n      msg += ` args: ${JSON.stringify(opts)}`\n      console.info(msg)\n    }\n    if (typeof opts !== 'object') {\n      opts = utils.preRequest.apply(this, arguments)\n    }\n    let doc = null\n    try {\n      doc = await this.execute(opts)\n    } catch (e) {\n      const ret = await this.emit('error', e, opts)\n      if (ret === undefined) {\n        throw e\n      }\n      doc = ret\n      if (this.logging) {\n        console.info('error catched, return', doc)\n        console.error(e)\n      }\n    }\n    if (this.logging) {\n      let msg = `Request`\n      this.name && (msg += ` ${this.name}`)\n      if (doc !== undefined) msg += ` result: ${JSON.stringify(doc)}`\n      if (this.benchmark) msg += ` Elapsed time: ${Date.now() - t1}ms`\n      console.info(msg)\n    }\n    return doc\n  }\n\n  async execute (opts) {\n    let self = this\n    let routes = self.routes\n    let parentParams = opts.params\n    let parentUri = opts.baseUri || ''\n    let done = restore(opts, opts.baseUri, opts.params)\n    opts.originalUri || (opts.originalUri = opts.uri)\n    let uri = opts.uri\n\n    for (let i = 0, len = routes.length; i < len; i++) {\n      opts.baseUri = parentUri\n      opts.uri = uri\n      let route = routes[i]\n      if (!route) {\n        continue\n      }\n      let match = route.match(opts)\n      if (!match) continue\n\n      opts.params = Object.assign({}, parentParams, match.params)\n\n      if (route.router) {\n        opts.baseUri = parentUri + match.uri\n        opts.uri = opts.uri.replace(match.uri, '')\n      }\n      let doc = await route.execute(opts)\n      done()\n      if (doc !== undefined) {\n        return doc\n      }\n    }\n\n    // restore obj props after function\n    function restore (obj, baseUri, params) {\n      return function () {\n        obj.uri = obj.originalUri\n        obj.baseUri = baseUri\n        obj.params = params\n      }\n    }\n  }\n}\n\nmodule.exports = Router\n","let ERRCODE = 900\n\nmodule.exports = {\n  FA_INVALID_TYPE: {\n    err: ERRCODE++,\n    msg: 'invalid type'\n  }\n}\n","const error = require('jm-err')\nconst event = require('jm-event')\nconst mdl = require('jm-module')\nconst utils = require('./utils')\nconst Router = require('./router')\nconst Err = require('./err')\n\n/**\n * Class representing a root.\n */\nclass Root {\n  /**\n   * create a root.\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  logging 是否打印日志，默认false\n   *  benchmark 是否计算耗时，默认false\n   * }\n   */\n  constructor (opts = {}) {\n    mdl.enableModule(this)\n    event.enableEvent(this)\n    this.utils = utils\n    this.clientModules = {}\n    this.serverModules = {}\n    this.logging = opts.logging || false\n    this.benchmark = opts.benchmark || false\n  }\n\n  /**\n   * create a router\n   * @param {Object} opts\n   * @return {Router}\n   */\n  router (opts = {}) {\n    let self = this\n    let _opts = Object.assign({}, { logging: this.logging, benchmark: this.benchmark }, opts)\n    let app = new Router(_opts)\n\n    /**\n     * 添加代理\n     * proxy({uri:uri, target:target, changeOrigin:true})\n     * proxy(uri, target, changeOrigin)\n     * proxy(uri, target)\n     * @param {String} uri\n     * @param {String} target\n     * @param {boolean} changeOrigin 是否改变原始uri\n     */\n    app.proxy = async function (uri = {}, target, changeOrigin) {\n      let opts = uri\n      if (typeof uri === 'string') {\n        opts = {\n          uri,\n          target,\n          changeOrigin\n        }\n      }\n      if (!opts.target) {\n        let doc = error.Err.FA_PARAMS\n        let err = error.err(doc)\n        throw err\n      }\n      this.emit('proxy', opts)\n      if (typeof opts.target === 'string') {\n        opts.target = { uri: opts.target }\n      }\n      let client = await self.client(opts.target)\n\n      if (opts.changeOrigin) {\n        app.use(opts.uri, client.request.bind(client))\n      } else {\n        app.use(opts.uri, client)\n      }\n    }\n    return app\n  }\n\n  /**\n   * create a client\n   * @param {Object} opts\n   * @example\n   * opts参数:{\n   *  type: 类型(可选, 默认http)\n   *  uri: uri(可选, 默认http://127.0.0.1)\n   *  timeout: 请求超时(可选, 单位毫秒, 默认0表示不检测超时)\n   * }\n   * @return {Promise}\n   */\n  async client (opts = {}) {\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n    if (!opts.uri) throw error.err(error.Err.FA_PARAMS)\n    let err = null\n    let doc = null\n    let type = 'http'\n    opts.uri && (type = utils.getUriProtocol(opts.uri))\n    opts.type && (type = opts.type)\n    type = type.toLowerCase()\n    let fn = this.clientModules[type]\n    if (!fn) {\n      doc = Err.FA_INVALID_TYPE\n      err = error.err(doc)\n      throw err\n    }\n    doc = await fn(opts)\n    if (doc) utils.enableType(doc, ['get', 'post', 'put', 'delete'])\n    return doc\n  }\n\n  /**\n   * create a server\n   * @param {Object} app\n   * @param {Object} opts\n   * @example\n   * opts参数:{\n     *  uri: 网址(可选)\n     *  type: 类型(可选, 默认http)\n     *  host: 主机(可选, 默认127.0.0.1)\n     *  port: 端口(可选, 默认80, 根据type不同默认值也不同)\n     * }\n   * @return {Promise}\n   */\n  async server (app = null, opts = {}) {\n    let err = null\n    let doc = null\n    let type = 'http'\n    opts.uri && (type = utils.getUriProtocol(opts.uri))\n    opts.type && (type = opts.type)\n    type = type.toLowerCase()\n    let fn = this.serverModules[type]\n    if (!fn) {\n      doc = Err.FA_INVALID_TYPE\n      err = error.err(doc)\n      throw err\n    }\n    app.emit('server', opts)\n    doc = await fn(app, opts)\n    return doc\n  }\n\n  /**\n   * 创建一个代理路由\n   * 支持多种参数格式, 例如\n   * proxy({uri:uri})\n   * proxy(uri)\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n     *  uri: 目标uri(必填)\n     * }\n   * @return {Promise}\n   */\n  async proxy (opts = {}) {\n    let err = null\n    let doc = null\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n    if (!opts.uri) {\n      doc = error.Err.FA_PARAMS\n      err = error.err(doc)\n      throw err\n    }\n    let app = this.router()\n    let client = await this.client(opts)\n    app.use(client.request.bind(client))\n    app.client = client\n    return app\n  }\n}\n\nRoot.utils = utils\nmodule.exports = Root\n"],"names":["preRequest","uri","type","data","opts","r","undefined","Object","assign","utils","getUriProtocol","substring","indexOf","getUriPath","idx","substr","enableType","obj","types","self","Array","isArray","forEach","arguments","apply","request","Matcher","toLowerCase","keys","regexp","pathtoRegexp","end","fast_slash","allType","params","m","exec","i","length","key","prop","name","DefaultRoute","fn","matcher","router","match","Route","then","value","Err","error","slice","prototype","Router","_routes","sensitive","strict","_logging","logging","_benchmark","benchmark","event","enableEvent","err","doc","FA_PARAMS","emit","o","route","push","call","_add","bind","execute","_use","t1","Date","now","msg","JSON","stringify","console","info","e","ret","restore","baseUri","originalUri","routes","parentParams","parentUri","done","len","replace","loggint","_settle","pact","s","state","result","shouldContinue","stage","update","reject","_resumeAfterBody","ERRCODE","FA_INVALID_TYPE","Root","mdl","enableModule","clientModules","serverModules","_opts","app","proxy","target","changeOrigin","client","use","f","args"],"mappings":"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"}