{"version":3,"file":"index.js","sources":["../lib/utils.js","../lib/consts.js","../lib/matcher.js","../lib/route.js","../lib/quickroute.js","../lib/router.js","../lib/err.js","../lib/index.js"],"sourcesContent":["const { slice, getUriProtocol, getUriPath } = require('jm-utils')\n\n/**\n * 减少一级array嵌套深度\n * [1, [2, [3, [4]], 5]] => [1, 2, [3, [4]], 5]\n * @param v\n */\nfunction flatten (arr) {\n  return arr.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), [])\n}\n\n/**\n * 统一add和use路由的参数\n * 支持多种参数格式, 例如\n * ({uri, type, fn})\n * ({uri, type, fn:[fn1, fn2, ..., fnn]})\n * ({uri, fn})\n * ({uri, fn:[fn1, fn2, ..., fnn]})\n * ({type, fn})\n * ({type, fn:[fn1, fn2, ..., fnn]})\n * ({fn})\n * ({fn:[fn1, fn2, ..., fnn]})\n *\n * (uri, type, fn)\n * (uri, type, fn1, fn2, ..., fnn)\n * (uri, type, [fn1, fn2, ..,fnn])\n * (uri, fn)\n * (uri, fn1, fn2, ..., fnn)\n * (uri, [fn1, fn2, ..,fnn])\n *\n * (fn)\n * (fn1, fn2, ..., fnn)\n * ([fn1, fn2, ..,fnn])\n *\n * fn 支持数组自动降级\n * (fn1, [fn2, fn3], fn4) => ([fn1, fn2, fn3, fn4])\n * ([fn1, [fn2, fn3], fn4]) => ([fn1, fn2, fn3, fn4])\n *\n * fn 支持函数对象混合传递\n * (fn1, obj1, obj2, router1, router2, fn2, ..., fnn)\n * ([fn1, obj1, obj2, router1, router2, fn2, ..,fnn])\n *\n * @param args 参数\n * @returns {{fn}|Object|*}\n * @example\n * {\n *  uri: 接口路径(可选)\n *  type: 请求类型(可选)\n *  fn: 接口处理函数(必填) function(opts){}, 函数或者函数数组，fn 也可以为 router 或者 object, 为object时必须实现了request或者execute函数之一，优先使用request\n * }\n */\nfunction uniteParams (...args) {\n  const opts = {}\n  if (!args.length) return opts\n\n  const obj = args[0]\n\n  if (typeof obj === 'object' && obj.fn) return obj\n\n  const uri = args[0]\n  if (typeof uri === 'string') {\n    opts.uri = uri\n    args = slice(args, 1)\n  }\n\n  const type = args[0]\n  if (typeof type === 'string') {\n    opts.type = type\n    args = slice(args, 1)\n  }\n\n  if (!args.length) return opts\n\n  args = flatten(args)\n  opts.fn = args.length === 1 ? args[0] : args\n\n  return opts\n}\n\nfunction preRequest (uri, type, data, opts) {\n  // uri为对象时直接返回\n  if (typeof uri === 'object') {\n    return uri\n  }\n\n  let r = {\n    uri: uri\n  }\n\n  // 第2个参数可能为空，data\n  if (type === undefined) {\n    return r\n  } else if (type && typeof type === 'object') {\n    return preRequest(uri, null, type, data)\n  } else if (typeof type === 'string') {\n    r.type = type\n  }\n\n  // 第3个参数可能为空，data\n  if (data === undefined) {\n    return r\n  } else if (data && typeof data === 'object') {\n    r.data = data\n  }\n\n  // 第4个参数可能为空，附加参数对象\n  if (opts === undefined) {\n    return r\n  } else if (opts && typeof opts === 'object') {\n    r = Object.assign(r, opts)\n  }\n\n  return r\n}\n\nmodule.exports = {\n  getUriProtocol,\n  getUriPath,\n\n  enableType: function (obj, types) {\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n    types.forEach(function (type) {\n      obj[type] = async function () {\n        const opts = preRequest.apply(this, arguments)\n        opts.type = type\n        const doc = await obj.request(opts)\n        return doc\n      }\n    })\n  },\n\n  uniteParams,\n  preRequest\n\n}\n","module.exports = {\n  Types: ['get', 'post', 'put', 'delete']\n}\n","const pathtoRegexp = require('path-to-regexp')\n\n/**\n * Class representing a matcher.\n */\nclass Matcher {\n  /**\n   * create a matcher.\n   * @param {Object} opts\n   * @example\n   * opts:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  sensitive: 是否大小写敏感, 默认false(可选)\n   *  strict: 是否检查末尾的分隔符, 默认false(可选)\n   *  end: When false the path will match at the beginning. (default: true)\n   * }\n   */\n  constructor (opts = {}) {\n    const uri = opts.uri || '/'\n    let type = opts.type\n    type && (type = type.toLowerCase())\n    this.type = type\n    this.keys = []\n\n    this.regexp = pathtoRegexp(uri, this.keys, opts)\n\n    if (uri === '/' && opts.end === false) {\n      this.fast_slash = true\n    }\n\n    if (type === undefined) {\n      this.allType = true\n    }\n  }\n\n  /**\n   * Check if this matcher matches `uri`, if so\n   * populate `.params and .uri`.\n   *\n   * @param {String} uri\n   * @return {Object}\n   * @api private\n   */\n  match (opts = {}) {\n    let params\n    let uri = opts.uri\n\n    let type = opts.type\n    type && (type = type.toLowerCase())\n\n    if (type !== this.type && !this.allType) return false\n    if (uri === null || uri === undefined) return false\n\n    if (this.fast_slash) {\n      // fast uri non-ending match for / (everything matches)\n      params = {}\n      uri = ''\n      return {\n        params,\n        uri\n      }\n    }\n\n    const m = this.regexp.exec(uri)\n\n    if (!m) return false\n\n    // store values\n    params = {}\n    uri = m[0]\n    const keys = this.keys\n    for (let i = 1; i < m.length; i++) {\n      const key = keys[i - 1]\n      const prop = key.name\n      params[prop] = m[i]\n    }\n\n    return {\n      params,\n      uri\n    }\n  }\n}\n\nmodule.exports = Matcher\n","const Route = require('jm-route')\nconst Matcher = require('./matcher')\n\nclass DefaultRoute extends Route {\n  /**\n   * create a route.\n   * @param {Object} opts params\n   * @example\n   * opts:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数(必填)\n   *\n   * }\n   */\n  constructor (opts = {}) {\n    super(opts.fn)\n    this.name = `${opts.type || ''} ${opts.uri || ''}`\n    this.matcher = new Matcher(opts)\n    opts.router && (this.router = opts.router)\n  }\n\n  match (opts) {\n    return this.matcher.match(opts)\n  }\n}\n\nmodule.exports = DefaultRoute\n","const { Types } = require('./consts')\nconst { uniteParams } = require('./utils')\n\n/**\n * 快速添加路由\n */\nmodule.exports = class {\n  constructor (router, uri) {\n    Object.assign(this, { router, uri })\n    for (const type of Types) {\n      this[type] = (...args) => {\n        return this.add(...args)\n      }\n    }\n  }\n\n  add (...args) {\n    const { uri } = this\n    const opts = uniteParams(...args)\n    if (uri) {\n      opts.uri = opts.uri ? `${uri}${opts.uri}` : uri\n    }\n    this.router.add(opts)\n    return this\n  }\n\n  use (...args) {\n    const { uri } = this\n    const opts = uniteParams(...args)\n    if (uri) {\n      opts.uri = opts.uri ? `${uri}${opts.uri}` : uri\n    }\n    this.router.use(opts)\n    return this\n  }\n}\n","const { Types } = require('./consts')\nconst Route = require('./route')\nconst { enableType, uniteParams, preRequest } = require('./utils')\nconst QuickRoute = require('./quickroute')\nconst error = require('jm-err')\nconst event = require('jm-event')\nconst { slice } = require('jm-utils')\nconst Err = error.Err\n\n/**\n * Class representing a router.\n */\nclass Router {\n  /**\n   * create a router.\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  sensitive: 是否大小写敏感(可选)\n   *  strict: 是否检查末尾的分隔符(可选)\n   *  logging 是否打印日志，默认false\n   *  benchmark 是否计算耗时，默认false\n   * }\n   */\n  constructor (opts = {}) {\n    this._routes = []\n    this.sensitive = opts.sensitive\n    this.strict = opts.strict\n    this._logging = opts.logging || false\n    this._benchmark = opts.benchmark || false\n    // alias methods\n    enableType(this, Types)\n    event.enableEvent(this)\n  }\n\n  get logging () {\n    return this._logging\n  }\n\n  set logging (value) {\n    this._logging = value\n    this._routes.forEach(route => {\n      route.logging = value\n    })\n  }\n\n  get benchmark () {\n    return this._benchmark\n  }\n\n  set benchmark (value) {\n    this._benchmark = value\n    this._routes.forEach(route => {\n      route.benchmark = value\n    })\n  }\n\n  get routes () {\n    return this._routes\n  }\n\n  /**\n   * clear all routes.\n   * @return {Router} for chaining\n   */\n  clear () {\n    this._routes = []\n    return this\n  }\n\n  /**\n   * 添加接口定义\n   * @function Router#_add\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(可选)，\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数 function(opts){}, 支持数组(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  _add (opts = {}) {\n    let { fn } = opts\n    if (!fn) {\n      throw error.err(Err.FA_PARAMS)\n    }\n\n    // fn 为数组时的处理\n    if (Array.isArray(fn)) {\n      const { length } = fn\n      if (!length) {\n        // 数组为空时, 参数错误\n        throw error.err(Err.FA_PARAMS)\n      } else if (length === 1) {\n        // 数组只有一个元素时, 直接取出元素再处理\n        fn = fn[0]\n      } else {\n        // 检查数组中是否存在对象，如果存在需要拆分后再添加\n        for (let i = 0; i < fn.length; i++) {\n          if (typeof fn[i] === 'object') {\n            if (i > 0) {\n              this._add({ ...opts, fn: slice(fn, 0, i) })\n            }\n            this._add({ ...opts, fn: fn[i] })\n            if (i < fn.length - 1) {\n              this._add({ ...opts, fn: slice(fn, i + 1) })\n            }\n            return this\n          }\n        }\n      }\n    }\n\n    this.emit('add', opts)\n\n    const o = { ...opts }\n\n    if (typeof fn === 'object') {\n      o.router = fn\n      const { request, execute } = fn\n      if (request) {\n        o.fn = request.bind(fn)\n      } else if (execute) {\n        o.fn = execute.bind(fn)\n      }\n    }\n\n    o.uri || (o.uri = '/')\n    if (o.sensitive === undefined) o.sensitive = this.sensitive\n    if (o.strict === undefined) o.strict = this.strict\n    const route = new Route(o)\n    route.logging = this._logging\n    route.benchmark = this._benchmark\n    this._routes.push(route)\n    return this\n  }\n\n  /**\n   * 添加接口定义, 精确匹配 uri\n   * 支持多种参数格式, 例如\n   * add({uri:uri, type:type, fn:fn})\n   * add({uri:uri, type:type, fn:[fn1, fn2, ..., fnn]})\n   * add(uri, fn)\n   * add(uri, fn1, fn2, ..., fnn)\n   * add(uri, [fn1, fn2, ..,fnn])\n   * add(uri, type, fn)\n   * add(uri, type, fn1, fn2, ..., fnn)\n   * add(uri, type, [fn1, fn2, ..,fnn])\n   * @function Router#add\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  fn: 接口处理函数 function(opts, cb){}, 支持数组(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  add (...args) {\n    const opts = uniteParams(...args)\n    return this._add(opts)\n  }\n\n  /**\n   * 引用路由定义, 匹配所有 uri\n   * use({uri:uri, fn:fn})\n   * use({uri:uri, fn:[fn1, fn2, ..., fnn]})\n   * use({uri:uri, fn:router})\n   * use({uri:uri, fn:obj}) obj必须实现了request或者execute函数之一，优先使用request\n   * use(uri, fn)\n   * use(uri, fn1, fn2, ..., fnn)\n   * use(uri, [fn1, fn2, ..,fnn])\n   * use(uri, router)\n   * use(uri, obj)\n   * use(fn)\n   * use(router)\n   * use(obj)\n   * use(fn1, fn2, ..., fnn)\n   * use([fn1, fn2, ..,fnn])\n   * @function Router#use\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(可选)\n   *  fn: 接口处理函数 router实例 或者 function(opts){}(必填)\n   * }\n   * @return {Router} for chaining\n   */\n  use (...args) {\n    const opts = uniteParams(...args)\n    this.emit('use', opts)\n    opts.strict = false\n    opts.end = false\n    return this.add(opts)\n  }\n\n  /**\n   * 请求\n   * 支持多种参数格式, 例如\n   * request({uri:uri, type:type, data:data, params:params, timeout:timeout})\n   * request(uri, type, data, opts)\n   * request(uri, type, data)\n   * request(uri, type)\n   * request(uri)\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  uri: 接口路径(必填)\n   *  type: 请求类型(可选)\n   *  data: 请求数据(可选)\n   *  params: 请求参数(可选)\n   *  timeout: 请求超时(可选, 单位毫秒, 默认0表示不检测超时)\n   * }\n   * @return {Object}\n   */\n  async request (opts) {\n    let t1 = 0\n    if (this.logging) {\n      if (this.benchmark) t1 = Date.now()\n      let msg = 'Request'\n      this.name && (msg += ` ${this.name}`)\n      msg += ` args: ${JSON.stringify(opts)}`\n      console.info(msg)\n    }\n    if (typeof opts !== 'object') {\n      opts = preRequest.apply(this, arguments)\n    }\n    let doc = null\n    try {\n      doc = await this.execute(opts)\n    } catch (e) {\n      const ret = await this.emit('error', e, opts)\n      if (ret === undefined) {\n        throw e\n      }\n      doc = ret\n      if (this.logging) {\n        console.info('error catched, return', doc)\n        console.error(e)\n      }\n    }\n    if (this.logging) {\n      let msg = 'Request'\n      this.name && (msg += ` ${this.name}`)\n      if (doc !== undefined) msg += ` result: ${JSON.stringify(doc)}`\n      if (this.benchmark) msg += ` Elapsed time: ${Date.now() - t1}ms`\n      console.info(msg)\n    }\n    return doc\n  }\n\n  async execute (opts) {\n    const self = this\n    const routes = self.routes\n    const parentParams = opts.params\n    const parentUri = opts.baseUri || ''\n    const done = restore(opts, opts.baseUri, opts.params)\n    opts.originalUri || (opts.originalUri = opts.uri)\n    const uri = opts.uri\n\n    for (let i = 0, len = routes.length; i < len; i++) {\n      opts.baseUri = parentUri\n      opts.uri = uri\n      const route = routes[i]\n      if (!route) {\n        continue\n      }\n      const match = route.match(opts)\n      if (!match) continue\n\n      opts.params = Object.assign({}, parentParams, match.params)\n\n      if (route.router) {\n        opts.baseUri = parentUri + match.uri\n        opts.uri = opts.uri.replace(match.uri, '')\n      }\n      const doc = await route.execute(opts)\n      done()\n      if (doc !== undefined) {\n        return doc\n      }\n    }\n\n    // restore obj props after function\n    function restore (obj, baseUri, params) {\n      return function () {\n        obj.uri = obj.originalUri\n        obj.baseUri = baseUri\n        obj.params = params\n      }\n    }\n  }\n\n  /**\n   * 快捷的路由增加方式\n   * Router.route('/xx/xxxx')\n   * .get\n   * .post\n   * .put\n   * .delete\n   * .use\n   * .add\n   * @param uri\n   */\n  route (uri) {\n    return new QuickRoute(this, uri)\n  }\n}\n\nmodule.exports = Router\n","let ERRCODE = 900\n\nmodule.exports = {\n  FA_INVALID_TYPE: {\n    err: ERRCODE++,\n    msg: 'invalid type'\n  }\n}\n","const error = require('jm-err')\nconst event = require('jm-event')\nconst mdl = require('jm-module')\nconst { getUriProtocol } = require('jm-utils')\nconst utils = require('./utils')\nconst Router = require('./router')\nconst Err = require('./err')\n\n/**\n * Class representing a root.\n */\nclass Root {\n  /**\n   * create a root.\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n   *  logging 是否打印日志，默认false\n   *  benchmark 是否计算耗时，默认false\n   * }\n   */\n  constructor (opts = {}) {\n    mdl.enableModule(this)\n    event.enableEvent(this)\n    this.utils = utils\n    this.clientModules = {}\n    this.serverModules = {}\n    this.logging = opts.logging || false\n    this.benchmark = opts.benchmark || false\n  }\n\n  /**\n   * create a router\n   * @param {Object} opts\n   * @return {Router}\n   */\n  router (opts = {}) {\n    const self = this\n    const _opts = Object.assign({}, { logging: this.logging, benchmark: this.benchmark }, opts)\n    const app = new Router(_opts)\n\n    /**\n     * 添加代理\n     * proxy({uri:uri, target:target, changeOrigin:true})\n     * proxy(uri, target, changeOrigin)\n     * proxy(uri, target)\n     * @param {String} uri\n     * @param {String} target\n     * @param {boolean} changeOrigin 是否改变原始uri\n     */\n    app.proxy = async function (uri = {}, target, changeOrigin) {\n      let opts = uri\n      if (typeof uri === 'string') {\n        opts = {\n          uri,\n          target,\n          changeOrigin\n        }\n      }\n      if (!opts.target) {\n        const doc = error.Err.FA_PARAMS\n        const err = error.err(doc)\n        throw err\n      }\n      this.emit('proxy', opts)\n      if (typeof opts.target === 'string') {\n        opts.target = { uri: opts.target }\n      }\n      const client = await self.client(opts.target)\n\n      if (opts.changeOrigin) {\n        app.use(opts.uri, client.request.bind(client))\n      } else {\n        app.use(opts.uri, client)\n      }\n    }\n    return app\n  }\n\n  /**\n   * create a client\n   * @param {Object} opts\n   * @example\n   * opts参数:{\n   *  type: 类型(可选, 默认http)\n   *  uri: uri(可选, 默认http://127.0.0.1)\n   *  timeout: 请求超时(可选, 单位毫秒, 默认0表示不检测超时)\n   * }\n   * @return {Promise}\n   */\n  async client (opts = {}) {\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n    if (!opts.uri) throw error.err(error.Err.FA_PARAMS)\n    let err = null\n    let doc = null\n    let type = 'http'\n    opts.uri && (type = getUriProtocol(opts.uri))\n    opts.type && (type = opts.type)\n    type = type.toLowerCase()\n    const fn = this.clientModules[type]\n    if (!fn) {\n      doc = Err.FA_INVALID_TYPE\n      err = error.err(doc)\n      throw err\n    }\n    doc = await fn(opts)\n    if (doc) utils.enableType(doc, ['get', 'post', 'put', 'delete'])\n    return doc\n  }\n\n  /**\n   * create a server\n   * @param {Object} app\n   * @param {Object} opts\n   * @example\n   * opts参数:{\n     *  uri: 网址(可选)\n     *  type: 类型(可选, 默认http)\n     *  host: 主机(可选, 默认127.0.0.1)\n     *  port: 端口(可选, 默认80, 根据type不同默认值也不同)\n     * }\n   * @return {Promise}\n   */\n  async server (app = null, opts = {}) {\n    let err = null\n    let doc = null\n    let type = 'http'\n    opts.uri && (type = getUriProtocol(opts.uri))\n    opts.type && (type = opts.type)\n    type = type.toLowerCase()\n    const fn = this.serverModules[type]\n    if (!fn) {\n      doc = Err.FA_INVALID_TYPE\n      err = error.err(doc)\n      throw err\n    }\n    app.emit('server', opts)\n    doc = await fn(app, opts)\n    return doc\n  }\n\n  /**\n   * 创建一个代理路由\n   * 支持多种参数格式, 例如\n   * proxy({uri:uri})\n   * proxy(uri)\n   * @param {Object} opts 参数\n   * @example\n   * opts参数:{\n     *  uri: 目标uri(必填)\n     * }\n   * @return {Promise}\n   */\n  async proxy (opts = {}) {\n    let err = null\n    let doc = null\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n    if (!opts.uri) {\n      doc = error.Err.FA_PARAMS\n      err = error.err(doc)\n      throw err\n    }\n    const app = this.router()\n    const client = await this.client(opts)\n    app.use(client.request.bind(client))\n    app.client = client\n    return app\n  }\n}\n\nRoot.utils = utils\nmodule.exports = Root\n"],"names":["slice","require$$0","getUriProtocol","getUriPath","flatten","arr","reduce","a","b","concat","Array","isArray","uniteParams","args","opts","length","obj","fn","uri","type","preRequest","data","r","undefined","Object","assign","enableType","types","forEach","arguments","apply","request","Types","Matcher","toLowerCase","keys","regexp","pathtoRegexp","end","fast_slash","allType","params","m","exec","i","key","prop","name","DefaultRoute","matcher","router","match","Route","require$$1","add","use","require$$2","pact","state","s","value","Err","error","_this","result","_isSettledPact","thenable","stage","shouldContinue","update","updateValue","test","Router","_routes","sensitive","strict","_logging","logging","_benchmark","benchmark","event","enableEvent","err","FA_PARAMS","_add","emit","o","execute","bind","route","push","t1","Date","now","msg","JSON","stringify","console","info","doc","e","ret","restore","baseUri","originalUri","self","routes","parentParams","parentUri","done","len","replace","QuickRoute","ERRCODE","FA_INVALID_TYPE","Promise","Root","mdl","enableModule","utils","clientModules","serverModules","_opts","app","proxy","target","changeOrigin","client"],"mappings":"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"}